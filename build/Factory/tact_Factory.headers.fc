;;
;; Header files for Factory
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $InnerDeployAmm$_store
builder $InnerDeployAmm$_store(builder build_0, (int, slice, slice, slice) v) inline;

;; $InnerDeployAmm$_store_cell
cell $InnerDeployAmm$_store_cell((int, slice, slice, slice) v) inline;

;; $InnerDeployMarket$_store
builder $InnerDeployMarket$_store(builder build_0, (int, slice, slice) v) inline;

;; $InnerDeployMarket$_store_cell
cell $InnerDeployMarket$_store_cell((int, slice, slice) v) inline;

;; $DeployTokenMarket$_load
(slice, ((int, int, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice, slice))) $DeployTokenMarket$_load(slice sc_0) inline_ref;

;; $MarketDeployedEvent$_store
builder $MarketDeployedEvent$_store(builder build_0, (int, slice, int, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice) v) inline_ref;

;; $MarketDeployedEvent$_store_cell
cell $MarketDeployedEvent$_store_cell((int, slice, int, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice) v) inline;

;; $DeployTokenMarketWithAmm$_load
(slice, ((int, int, slice, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice, slice))) $DeployTokenMarketWithAmm$_load(slice sc_0) inline_ref;

;; $MarketDeployedEventWithAmm$_store
builder $MarketDeployedEventWithAmm$_store(builder build_0, (int, slice, int, slice, slice, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice) v) inline_ref;

;; $MarketDeployedEventWithAmm$_store_cell
cell $MarketDeployedEventWithAmm$_store_cell((int, slice, int, slice, slice, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice) v) inline;

;; $Factory$_store
builder $Factory$_store(builder build_0, (int) v) inline;

;; $Factory$_load
(slice, ((int))) $Factory$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Market$init$_store
builder $Market$init$_store(builder build_0, (int, slice, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice) v) inline;

;; $Amm$init$_store
builder $Amm$init$_store(builder build_0, (int, slice, slice) v) inline;

;; $Factory$init$_load
(slice, ((int))) $Factory$init$_load(slice sc_0) inline;

;; $Factory$_contract_init
(int) $Factory$_contract_init(int $id) impure inline_ref;

;; $Factory$_contract_load
(int) $Factory$_contract_load() impure inline_ref;

;; $Factory$_contract_store
() $Factory$_contract_store((int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $Market$_init_child
(cell, cell) $Market$_init_child(cell sys', int $id, slice $owner, slice $coin, slice $amm, slice $factory, slice $underlyingAssetName, int $duration, cell $collection_content, int $operatorFee, int $serviceFee, slice $oracle, int $feedIdAsset, int $feedIdToken, slice $operatorFeeAddress) inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body_code_data(slice $to, int $value, int $mode, int $bounce, cell $body, cell $code, cell $data) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $Amm$_init_child
(cell, cell) $Amm$_init_child(cell sys', int $id, slice $factory, slice $owner) inline_ref;

;; $Factory$_fun_id
((int), int) $Factory$_fun_id((int) $self) impure inline_ref;

;; $Factory$_fun_forward
((int), ()) $Factory$_fun_forward((int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Factory$_fun_notify
((int), ()) $Factory$_fun_notify((int) $self, cell $body) impure inline;

;; $MarketDeployedEvent$_constructor_queryId_marketAddress_id_owner_coin_jettonWallet_underlyingAssetName_duration_collection_content_operatorFee_serviceFee_oracle_feedIdAsset_feedIdToken_operatorFeeAddress
((int, slice, int, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice)) $MarketDeployedEvent$_constructor_queryId_marketAddress_id_owner_coin_jettonWallet_underlyingAssetName_duration_collection_content_operatorFee_serviceFee_oracle_feedIdAsset_feedIdToken_operatorFeeAddress(int $queryId, slice $marketAddress, int $id, slice $owner, slice $coin, slice $jettonWallet, slice $underlyingAssetName, int $duration, cell $collection_content, int $operatorFee, int $serviceFee, slice $oracle, int $feedIdAsset, int $feedIdToken, slice $operatorFeeAddress) inline;

;; $InnerDeployMarket$_constructor_queryId_jettonWallet_originalGasTo
((int, slice, slice)) $InnerDeployMarket$_constructor_queryId_jettonWallet_originalGasTo(int $queryId, slice $jettonWallet, slice $originalGasTo) inline;

;; $MarketDeployedEventWithAmm$_constructor_queryId_marketAddress_id_owner_coin_amm_jettonWallet_jettonWalletAmm_underlyingAssetName_duration_collection_content_operatorFee_serviceFee_oracle_feedIdAsset_feedIdToken_operatorFeeAddress
((int, slice, int, slice, slice, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice)) $MarketDeployedEventWithAmm$_constructor_queryId_marketAddress_id_owner_coin_amm_jettonWallet_jettonWalletAmm_underlyingAssetName_duration_collection_content_operatorFee_serviceFee_oracle_feedIdAsset_feedIdToken_operatorFeeAddress(int $queryId, slice $marketAddress, int $id, slice $owner, slice $coin, slice $amm, slice $jettonWallet, slice $jettonWalletAmm, slice $underlyingAssetName, int $duration, cell $collection_content, int $operatorFee, int $serviceFee, slice $oracle, int $feedIdAsset, int $feedIdToken, slice $operatorFeeAddress) inline;

;; $InnerDeployAmm$_constructor_queryId_jettonWallet_market_originalGasTo
((int, slice, slice, slice)) $InnerDeployAmm$_constructor_queryId_jettonWallet_market_originalGasTo(int $queryId, slice $jettonWallet, slice $market, slice $originalGasTo) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
