;;
;; Header files for Amm
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $InnerDeployAmm$_load
(slice, ((int, slice, slice, slice))) $InnerDeployAmm$_load(slice sc_0) inline;

;; $WithdrawToken$_load
(slice, ((int, int, slice))) $WithdrawToken$_load(slice sc_0) inline;

;; $TakeDealWithOriginalGasTo$_store
builder $TakeDealWithOriginalGasTo$_store(builder build_0, (cell) v) inline;

;; $TakeDealWithOriginalGasTo$_store_cell
cell $TakeDealWithOriginalGasTo$_store_cell((cell) v) inline;

;; $TakeDealDataWithOriginalGasTo$_store
builder $TakeDealDataWithOriginalGasTo$_store(builder build_0, (int, slice, cell, cell) v) inline;

;; $TakeDealDataWithOriginalGasTo$_store_cell
cell $TakeDealDataWithOriginalGasTo$_store_cell((int, slice, cell, cell) v) inline;

;; $TakeDealAmm$_load
(slice, ((int, int, int, slice, cell, cell))) $TakeDealAmm$_load(slice sc_0) inline_ref;

;; $TokenTransfer$_store
builder $TokenTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $TokenTransfer$_store_cell
cell $TokenTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $ChangeOwner$_load
(slice, ((int, slice))) $ChangeOwner$_load(slice sc_0) inline;

;; $ChangeOwnerOk$_store
builder $ChangeOwnerOk$_store(builder build_0, (int, slice) v) inline;

;; $ChangeOwnerOk$_store_cell
cell $ChangeOwnerOk$_store_cell((int, slice) v) inline;

;; $Amm$_store
builder $Amm$_store(builder build_0, (int, slice, slice, slice, slice) v) inline;

;; $Amm$_load
(slice, ((int, slice, slice, slice, slice))) $Amm$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Amm$init$_load
(slice, ((int, slice, slice))) $Amm$init$_load(slice sc_0) inline;

;; $Amm$_contract_init
(int, slice, slice, slice, slice) $Amm$_contract_init(int $id, slice $factory, slice $owner) impure inline_ref;

;; $Amm$_contract_load
(int, slice, slice, slice, slice) $Amm$_contract_load() impure inline_ref;

;; $Amm$_contract_store
() $Amm$_contract_store((int, slice, slice, slice, slice) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice $to, int $value, int $mode, int $bounce, cell $body) inline;

;; $TokenTransfer$_constructor_amount_recipient_query_id_response_destination_custom_payload_forward_ton_amount_forward_payload
((int, int, slice, slice, cell, int, slice)) $TokenTransfer$_constructor_amount_recipient_query_id_response_destination_custom_payload_forward_ton_amount_forward_payload(int $amount, slice $recipient, int $query_id, slice $response_destination, cell $custom_payload, int $forward_ton_amount, slice $forward_payload) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $Amm$_fun_id
((int, slice, slice, slice, slice), int) $Amm$_fun_id((int, slice, slice, slice, slice) $self) impure inline_ref;

;; $Amm$_fun_market
((int, slice, slice, slice, slice), slice) $Amm$_fun_market((int, slice, slice, slice, slice) $self) impure inline_ref;

;; $Amm$_fun_balance
((int, slice, slice, slice, slice), int) $Amm$_fun_balance((int, slice, slice, slice, slice) $self) impure inline_ref;

;; $Amm$_fun_forward
((int, slice, slice, slice, slice), ()) $Amm$_fun_forward((int, slice, slice, slice, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Amm$_fun_reply
((int, slice, slice, slice, slice), ()) $Amm$_fun_reply((int, slice, slice, slice, slice) $self, cell $body) impure inline;

;; $Amm$_fun_requireOwner
((int, slice, slice, slice, slice), ()) $Amm$_fun_requireOwner((int, slice, slice, slice, slice) $self) impure inline_ref;

;; $Amm$_fun_owner
((int, slice, slice, slice, slice), slice) $Amm$_fun_owner((int, slice, slice, slice, slice) $self) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;

;; $TakeDealWithOriginalGasTo$_constructor_data
((cell)) $TakeDealWithOriginalGasTo$_constructor_data(cell $data) inline;

;; $TakeDealDataWithOriginalGasTo$_constructor_dealId_oracleAssetData_oracleTokenData_originalGasTo
((int, slice, cell, cell)) $TakeDealDataWithOriginalGasTo$_constructor_dealId_oracleAssetData_oracleTokenData_originalGasTo(int $dealId, cell $oracleAssetData, cell $oracleTokenData, slice $originalGasTo) inline;

;; $ChangeOwnerOk$_constructor_queryId_newOwner
((int, slice)) $ChangeOwnerOk$_constructor_queryId_newOwner(int $queryId, slice $newOwner) inline;
