;;
;; Header files for AmmTon
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $InnerDeployAmmTon$_load
(slice, ((int, slice, slice))) $InnerDeployAmmTon$_load(slice sc_0) inline;

;; $WithdrawTon$_load
(slice, ((int, int))) $WithdrawTon$_load(slice sc_0) inline;

;; $TakeDealDataWithOriginalGasTo$_store
builder $TakeDealDataWithOriginalGasTo$_store(builder build_0, (int, slice, cell, cell) v) inline;

;; $TakeDealWithOriginalGasToTon$_store
builder $TakeDealWithOriginalGasToTon$_store(builder build_0, (int, int, (int, slice, cell, cell)) v) inline;

;; $TakeDealWithOriginalGasToTon$_store_cell
cell $TakeDealWithOriginalGasToTon$_store_cell((int, int, (int, slice, cell, cell)) v) inline;

;; $TakeDealAmm$_load
(slice, ((int, int, int, slice, cell, cell))) $TakeDealAmm$_load(slice sc_0) inline_ref;

;; $ChangeOwner$_load
(slice, ((int, slice))) $ChangeOwner$_load(slice sc_0) inline;

;; $ChangeOwnerOk$_store
builder $ChangeOwnerOk$_store(builder build_0, (int, slice) v) inline;

;; $ChangeOwnerOk$_store_cell
cell $ChangeOwnerOk$_store_cell((int, slice) v) inline;

;; $AmmTon$_store
builder $AmmTon$_store(builder build_0, (int, slice, slice, slice, int) v) inline;

;; $AmmTon$_load
(slice, ((int, slice, slice, slice, int))) $AmmTon$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $AmmTon$init$_load
(slice, ((int, slice, slice))) $AmmTon$init$_load(slice sc_0) inline;

;; $AmmTon$_contract_init
(int, slice, slice, slice, int) $AmmTon$_contract_init(int $id, slice $factory, slice $owner) impure inline_ref;

;; $AmmTon$_contract_load
(int, slice, slice, slice, int) $AmmTon$_contract_load() impure inline_ref;

;; $AmmTon$_contract_store
() $AmmTon$_contract_store((int, slice, slice, slice, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice $to, int $value, int $mode, int $bounce, cell $body) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $SendParameters$_constructor_to_value_mode_bounce
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce(slice $to, int $value, int $mode, int $bounce) inline;

;; $AmmTon$_fun_id
((int, slice, slice, slice, int), int) $AmmTon$_fun_id((int, slice, slice, slice, int) $self) impure inline_ref;

;; $AmmTon$_fun_market
((int, slice, slice, slice, int), slice) $AmmTon$_fun_market((int, slice, slice, slice, int) $self) impure inline_ref;

;; $AmmTon$_fun_deposited
((int, slice, slice, slice, int), int) $AmmTon$_fun_deposited((int, slice, slice, slice, int) $self) impure inline_ref;

;; $AmmTon$_fun_balance
((int, slice, slice, slice, int), int) $AmmTon$_fun_balance((int, slice, slice, slice, int) $self) impure inline_ref;

;; $AmmTon$_fun_forward
((int, slice, slice, slice, int), ()) $AmmTon$_fun_forward((int, slice, slice, slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $AmmTon$_fun_reply
((int, slice, slice, slice, int), ()) $AmmTon$_fun_reply((int, slice, slice, slice, int) $self, cell $body) impure inline;

;; $AmmTon$_fun_requireOwner
((int, slice, slice, slice, int), ()) $AmmTon$_fun_requireOwner((int, slice, slice, slice, int) $self) impure inline_ref;

;; $AmmTon$_fun_owner
((int, slice, slice, slice, int), slice) $AmmTon$_fun_owner((int, slice, slice, slice, int) $self) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;

;; $TakeDealWithOriginalGasToTon$_constructor_queryId_amount_deal
((int, int, (int, slice, cell, cell))) $TakeDealWithOriginalGasToTon$_constructor_queryId_amount_deal(int $queryId, int $amount, (int, slice, cell, cell) $deal) inline;

;; $TakeDealDataWithOriginalGasTo$_constructor_dealId_oracleAssetData_oracleTokenData_originalGasTo
((int, slice, cell, cell)) $TakeDealDataWithOriginalGasTo$_constructor_dealId_oracleAssetData_oracleTokenData_originalGasTo(int $dealId, cell $oracleAssetData, cell $oracleTokenData, slice $originalGasTo) inline;

;; $ChangeOwnerOk$_constructor_queryId_newOwner
((int, slice)) $ChangeOwnerOk$_constructor_queryId_newOwner(int $queryId, slice $newOwner) inline;
