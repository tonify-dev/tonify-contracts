;;
;; Header files for MarketTon
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_string
tuple __tact_string_builder_start_string() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $TakeDealData$_load
(slice, ((int, cell, cell))) $TakeDealData$_load(slice sc_0) inline;

;; $TakeDealTon$_load
(slice, ((int, (int, cell, cell)))) $TakeDealTon$_load(slice sc_0) inline;

;; $TakeDealDataWithOriginalGasTo$_load
(slice, ((int, slice, cell, cell))) $TakeDealDataWithOriginalGasTo$_load(slice sc_0) inline;

;; $TakeDealWithOriginalGasToTon$_load
(slice, ((int, int, (int, slice, cell, cell)))) $TakeDealWithOriginalGasToTon$_load(slice sc_0) inline;

;; $InnerDeployMarketTon$_load
(slice, ((int, slice))) $InnerDeployMarketTon$_load(slice sc_0) inline;

;; $WithdrawOperatorFee$_load
(slice, ((int, int, slice))) $WithdrawOperatorFee$_load(slice sc_0) inline;

;; $WithdrawServiceFee$_load
(slice, ((int, int, slice))) $WithdrawServiceFee$_load(slice sc_0) inline;

;; $CreateDealData$_load
(slice, ((int, int, int, int, int, int, cell, cell))) $CreateDealData$_load(slice sc_0) inline_ref;

;; $CreateDealTon$_load
(slice, ((int, (int, int, int, int, int, int, cell, cell)))) $CreateDealTon$_load(slice sc_0) inline;

;; $CancelDeal$_load
(slice, ((int, int))) $CancelDeal$_load(slice sc_0) inline;

;; $ProcessDeal$_load
(slice, ((int, int, cell, cell))) $ProcessDeal$_load(slice sc_0) inline;

;; $DealData$_store
builder $DealData$_store(builder build_0, (int, int, int, int, int, int, int, int, int, int, int, int, int, slice) v) inline_ref;

;; $DealData$_store_cell
cell $DealData$_store_cell((int, int, int, int, int, int, int, int, int, int, int, int, int, slice) v) inline;

;; $DealData$_load
(slice, ((int, int, int, int, int, int, int, int, int, int, int, int, int, slice))) $DealData$_load(slice sc_0) inline_ref;

;; $DealData$_load_not_mut
((int, int, int, int, int, int, int, int, int, int, int, int, int, slice)) $DealData$_load_not_mut(slice sc_0) inline_ref;

;; $CancelEvent$_store
builder $CancelEvent$_store(builder build_0, (int, int, slice, int) v) inline;

;; $CancelEvent$_store_cell
cell $CancelEvent$_store_cell((int, int, slice, int) v) inline;

;; $DealAcceptedEvent$_store
builder $DealAcceptedEvent$_store(builder build_0, (int, int, slice, int) v) inline;

;; $DealAcceptedEvent$_store_cell
cell $DealAcceptedEvent$_store_cell((int, int, slice, int) v) inline;

;; $DealCreatedEvent$_store
builder $DealCreatedEvent$_store(builder build_0, (int, int, slice, int) v) inline;

;; $DealCreatedEvent$_store_cell
cell $DealCreatedEvent$_store_cell((int, int, slice, int) v) inline;

;; $DealCompletedEvent$_store
builder $DealCompletedEvent$_store(builder build_0, (int, int, slice, int) v) inline;

;; $DealCompletedEvent$_store_cell
cell $DealCompletedEvent$_store_cell((int, int, slice, int) v) inline;

;; $DealExpiredEvent$_store
builder $DealExpiredEvent$_store(builder build_0, (int, int, slice, int) v) inline;

;; $DealExpiredEvent$_store_cell
cell $DealExpiredEvent$_store_cell((int, int, slice, int) v) inline;

;; $ContextCancelDealForDealReceived$_store
builder $ContextCancelDealForDealReceived$_store(builder build_0, (slice) v) inline;

;; $ContextCancelDealForDealReceived$_store_cell
cell $ContextCancelDealForDealReceived$_store_cell((slice) v) inline;

;; $ContextCancelDealForDealReceived$_load
(slice, ((slice))) $ContextCancelDealForDealReceived$_load(slice sc_0) inline;

;; $ContextCancelDealForDealReceived$_load_not_mut
((slice)) $ContextCancelDealForDealReceived$_load_not_mut(slice sc_0) inline;

;; $ContextTakeDealForDealReceived$_store
builder $ContextTakeDealForDealReceived$_store(builder build_0, (slice, int, slice, int, int, int, int, int, int) v) inline_ref;

;; $ContextTakeDealForDealReceived$_store_cell
cell $ContextTakeDealForDealReceived$_store_cell((slice, int, slice, int, int, int, int, int, int) v) inline;

;; $ContextTakeDealForDealReceived$_load
(slice, ((slice, int, slice, int, int, int, int, int, int))) $ContextTakeDealForDealReceived$_load(slice sc_0) inline_ref;

;; $ContextTakeDealForDealReceived$_load_not_mut
((slice, int, slice, int, int, int, int, int, int)) $ContextTakeDealForDealReceived$_load_not_mut(slice sc_0) inline_ref;

;; $ContextProcessDealForDealReceived$_store
builder $ContextProcessDealForDealReceived$_store(builder build_0, (slice, int, int, int, int, int, int) v) inline_ref;

;; $ContextProcessDealForDealReceived$_store_cell
cell $ContextProcessDealForDealReceived$_store_cell((slice, int, int, int, int, int, int) v) inline;

;; $ContextProcessDealForDealReceived$_load
(slice, ((slice, int, int, int, int, int, int))) $ContextProcessDealForDealReceived$_load(slice sc_0) inline_ref;

;; $ContextProcessDealForDealReceived$_load_not_mut
((slice, int, int, int, int, int, int)) $ContextProcessDealForDealReceived$_load_not_mut(slice sc_0) inline_ref;

;; $ContextTakeDealForPriceReceived$_store
builder $ContextTakeDealForPriceReceived$_store(builder build_0, (slice, int, int, slice) v) inline;

;; $ContextTakeDealForPriceReceived$_store_cell
cell $ContextTakeDealForPriceReceived$_store_cell((slice, int, int, slice) v) inline;

;; $ContextTakeDealForPriceReceived$_load
(slice, ((slice, int, int, slice))) $ContextTakeDealForPriceReceived$_load(slice sc_0) inline;

;; $ContextTakeDealForPriceReceived$_load_not_mut
((slice, int, int, slice)) $ContextTakeDealForPriceReceived$_load_not_mut(slice sc_0) inline;

;; $ContextProcessDealForPriceReceived$_store
builder $ContextProcessDealForPriceReceived$_store(builder build_0, (slice, int) v) inline;

;; $ContextProcessDealForPriceReceived$_store_cell
cell $ContextProcessDealForPriceReceived$_store_cell((slice, int) v) inline;

;; $ContextProcessDealForPriceReceived$_load
(slice, ((slice, int))) $ContextProcessDealForPriceReceived$_load(slice sc_0) inline;

;; $ContextProcessDealForPriceReceived$_load_not_mut
((slice, int)) $ContextProcessDealForPriceReceived$_load_not_mut(slice sc_0) inline;

;; $ContextForGetOwner$_store
builder $ContextForGetOwner$_store(builder build_0, (int, slice) v) inline;

;; $ContextForGetOwner$_store_cell
cell $ContextForGetOwner$_store_cell((int, slice) v) inline;

;; $ContextForGetOwner$_load
(slice, ((int, slice))) $ContextForGetOwner$_load(slice sc_0) inline;

;; $ContextForGetOwner$_load_not_mut
((int, slice)) $ContextForGetOwner$_load_not_mut(slice sc_0) inline;

;; $TakeDealAmm$_store
builder $TakeDealAmm$_store(builder build_0, (int, int, int, slice, cell, cell) v) inline_ref;

;; $TakeDealAmm$_store_cell
cell $TakeDealAmm$_store_cell((int, int, int, slice, cell, cell) v) inline;

;; $GetData$_store
builder $GetData$_store(builder build_0, (int) v) inline;

;; $GetData$_store_cell
cell $GetData$_store_cell((int) v) inline;

;; $GetData$_load
(slice, ((int))) $GetData$_load(slice sc_0) inline;

;; $ReportData$_load
(slice, ((int, int, cell))) $ReportData$_load(slice sc_0) inline;

;; $SaveData$_store
builder $SaveData$_store(builder build_0, (int, slice, cell) v) inline;

;; $SaveData$_store_cell
cell $SaveData$_store_cell((int, slice, cell) v) inline;

;; $DeleteData$_store
builder $DeleteData$_store(builder build_0, (int, slice) v) inline;

;; $DeleteData$_store_cell
cell $DeleteData$_store_cell((int, slice) v) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, slice, slice, cell, int, slice) v) inline;

;; $GetOwner$_store
builder $GetOwner$_store(builder build_0, (int) v) inline;

;; $GetOwner$_store_cell
cell $GetOwner$_store_cell((int) v) inline;

;; $GetOwner$_load
(slice, ((int))) $GetOwner$_load(slice sc_0) inline;

;; $ReportOwner$_load
(slice, ((int, int, slice))) $ReportOwner$_load(slice sc_0) inline;

;; $MarketTon$_store
builder $MarketTon$_store(builder build_0, (int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) v) inline;

;; $MarketTon$_load
(slice, ((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice))) $MarketTon$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $StateInit$_to_external
(cell, cell) $StateInit$_to_external(((cell, cell)) v) inline;

;; $CollectionData$_to_external
(int, cell, slice) $CollectionData$_to_external(((int, cell, slice)) v) inline;

;; $MarketTon$init$_load
(slice, ((int, slice, slice, slice, slice, int, cell, int, int, slice, int, int, slice))) $MarketTon$init$_load(slice sc_0) inline_ref;

;; $Deal$init$_store
builder $Deal$init$_store(builder build_0, (int, slice) v) inline;

;; $NftItem$init$_store
builder $NftItem$init$_store(builder build_0, (slice, int) v) inline;

;; $MarketTon$_contract_init
(int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $MarketTon$_contract_init(int $id, slice $owner, slice $amm, slice $factory, slice $underlyingAssetName, int $duration, cell $collection_content, int $operatorFee, int $serviceFee, slice $oracle, int $feedIdAsset, int $feedIdToken, slice $operatorFeeAddress) impure inline_ref;

;; $MarketTon$_contract_load
(int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $MarketTon$_contract_load() impure inline_ref;

;; $MarketTon$_contract_store
() $MarketTon$_contract_store((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice $to, int $value, int $mode, int $bounce, cell $body) inline;

;; $TakeDealAmm$_constructor_dealId_queryId_amount_originalGasTo_oracleAssetData_oracleTokenData
((int, int, int, slice, cell, cell)) $TakeDealAmm$_constructor_dealId_queryId_amount_originalGasTo_oracleAssetData_oracleTokenData(int $dealId, int $queryId, int $amount, slice $originalGasTo, cell $oracleAssetData, cell $oracleTokenData) inline;

;; $DealData$_constructor_rate_rateMaker_percent_slippageMaker_collateralAmountMaker_dateOrderCreation_dateOrderExpiration_dateStart_dateStop_buyerTokenId_sellerTokenId_maker_isSeller_status
((int, int, int, int, int, int, int, int, int, int, int, int, int, slice)) $DealData$_constructor_rate_rateMaker_percent_slippageMaker_collateralAmountMaker_dateOrderCreation_dateOrderExpiration_dateStart_dateStop_buyerTokenId_sellerTokenId_maker_isSeller_status(int $rate, int $rateMaker, int $percent, int $slippageMaker, int $collateralAmountMaker, int $dateOrderCreation, int $dateOrderExpiration, int $dateStart, int $dateStop, int $buyerTokenId, int $sellerTokenId, slice $maker, int $isSeller, int $status) inline;

;; $DealCreatedEvent$_constructor_queryId_dealId_maker_collateralAmountMaker
((int, int, slice, int)) $DealCreatedEvent$_constructor_queryId_dealId_maker_collateralAmountMaker(int $queryId, int $dealId, slice $maker, int $collateralAmountMaker) inline;

;; $ContextTakeDealForPriceReceived$_constructor_from_amount_dealId_originalGasTo
((slice, int, int, slice)) $ContextTakeDealForPriceReceived$_constructor_from_amount_dealId_originalGasTo(slice $from, int $amount, int $dealId, slice $originalGasTo) inline;

;; $ContextTakeDealForDealReceived$_constructor_from_amount_originalGasTo_feedId_price_timestamp_feedId2_price2_timestamp2
((slice, int, slice, int, int, int, int, int, int)) $ContextTakeDealForDealReceived$_constructor_from_amount_originalGasTo_feedId_price_timestamp_feedId2_price2_timestamp2(slice $from, int $amount, slice $originalGasTo, int $feedId, int $price, int $timestamp, int $feedId2, int $price2, int $timestamp2) inline;

;; $ContextProcessDealForDealReceived$_constructor_from_feedId_price_timestamp_feedId2_price2_timestamp2
((slice, int, int, int, int, int, int)) $ContextProcessDealForDealReceived$_constructor_from_feedId_price_timestamp_feedId2_price2_timestamp2(slice $from, int $feedId, int $price, int $timestamp, int $feedId2, int $price2, int $timestamp2) inline;

;; $DealAcceptedEvent$_constructor_queryId_dealId_maker_collateralAmountMaker
((int, int, slice, int)) $DealAcceptedEvent$_constructor_queryId_dealId_maker_collateralAmountMaker(int $queryId, int $dealId, slice $maker, int $collateralAmountMaker) inline;

;; $CancelEvent$_constructor_queryId_dealId_maker_collateralAmountMaker
((int, int, slice, int)) $CancelEvent$_constructor_queryId_dealId_maker_collateralAmountMaker(int $queryId, int $dealId, slice $maker, int $collateralAmountMaker) inline;

;; $DealExpiredEvent$_constructor_queryId_dealId_maker_collateralAmountMaker
((int, int, slice, int)) $DealExpiredEvent$_constructor_queryId_dealId_maker_collateralAmountMaker(int $queryId, int $dealId, slice $maker, int $collateralAmountMaker) inline;

;; $DealCompletedEvent$_constructor_queryId_dealId_maker_collateralAmountMaker
((int, int, slice, int)) $DealCompletedEvent$_constructor_queryId_dealId_maker_collateralAmountMaker(int $queryId, int $dealId, slice $maker, int $collateralAmountMaker) inline;

;; $ContextForGetOwner$_constructor_amount_originalGasTo
((int, slice)) $ContextForGetOwner$_constructor_amount_originalGasTo(int $amount, slice $originalGasTo) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body_code_data(slice $to, int $value, int $mode, int $bounce, cell $body, cell $code, cell $data) inline;

;; $SaveData$_constructor_queryId_originalGasTo_data
((int, slice, cell)) $SaveData$_constructor_queryId_originalGasTo_data(int $queryId, slice $originalGasTo, cell $data) inline;

;; $DeleteData$_constructor_queryId_originalGasTo
((int, slice)) $DeleteData$_constructor_queryId_originalGasTo(int $queryId, slice $originalGasTo) inline;

;; $GetData$_constructor_queryId
((int)) $GetData$_constructor_queryId(int $queryId) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body_code_data(slice $to, int $value, int $bounce, int $mode, cell $body, cell $code, cell $data) inline;

;; $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload
((int, slice, slice, cell, int, slice)) $Transfer$_constructor_query_id_new_owner_response_destination_custom_payload_forward_amount_forward_payload(int $query_id, slice $new_owner, slice $response_destination, cell $custom_payload, int $forward_amount, slice $forward_payload) inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice $to, int $value, int $bounce, int $mode, cell $body) inline;

;; $GetOwner$_constructor_query_id
((int)) $GetOwner$_constructor_query_id(int $query_id) inline;

;; $CollectionData$_constructor_next_item_index_collection_content_owner_address
((int, cell, slice)) $CollectionData$_constructor_next_item_index_collection_content_owner_address(int $next_item_index, cell $collection_content, slice $owner_address) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice $to, int $value, int $mode, cell $body) inline;

;; $MarketTon$_fun_returnTon
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_returnTon((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, slice $to, int $reason) impure inline_ref;

;; $MarketTon$_fun_addTonDepositBalance
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_addTonDepositBalance((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $value) impure inline_ref;

;; $Deal$_init_child
(cell, cell) $Deal$_init_child(cell sys', int $id, slice $owner) inline_ref;

;; $MarketTon$_fun_saveDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_saveDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, int $dealId, (int, int, int, int, int, int, int, int, int, int, int, int, int, slice) $deal, slice $originalGasTo) impure inline_ref;

;; $MarketTon$_fun_handleCreateDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_handleCreateDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, (int, int, int, int, int, int, cell, cell) $deal, int $amount, slice $from) impure inline_ref;

;; $MarketTon$_fun_fetchPrice
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_fetchPrice((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, cell $firstOracleData, cell $secondOracleData) impure inline_ref;

;; $MarketTon$_fun_fetchPriceWithSaveContext
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_fetchPriceWithSaveContext((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, cell $oracleAssetData, cell $oracleTokenData, cell $saveContext) impure inline_ref;

;; $MarketTon$_fun_handleTakeDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_handleTakeDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, (int, cell, cell) $takeDeal, int $amount, slice $from, slice $originalGasTo) impure inline_ref;

;; $MarketTon$_fun_fetchDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_fetchDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, int $dealId, cell $saveContext) impure inline_ref;

;; $MarketTon$_fun_takeDealAfterRecievedPrice
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_takeDealAfterRecievedPrice((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, cell $query, (int, slice, int, slice) $ctx, int $queryId, int $feedId, int $price, int $timestamp, int $feedId2, int $price2, int $timestamp2) impure inline_ref;

;; $MarketTon$_fun_processDealAfterRecievedPrice
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_processDealAfterRecievedPrice((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, cell $query, (int, slice, int, slice) $ctx, int $queryId, int $feedId, int $price, int $timestamp, int $feedId2, int $price2, int $timestamp2) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce(slice $to, int $value, int $mode, int $bounce) inline;

;; $NftItem$_init_child
(cell, cell) $NftItem$_init_child(cell sys', slice $collection_address, int $item_index) inline_ref;

;; $MarketTon$_fun_getNftItemInit
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), (cell, cell)) $MarketTon$_fun_getNftItemInit((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $item_index) impure inline_ref;

;; $MarketTon$_fun_mint
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_mint((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $query_id, slice $new_owner, int $msgValue, slice $response_destination) impure inline_ref;

;; $MarketTon$_fun_takeDealAfterRecievedDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_takeDealAfterRecievedDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, (int, int, int, int, int, int, int, int, int, int, int, int, int, slice) $deal, cell $query, (int, slice, int, slice) $ctx, int $queryId, int $dealId) impure inline_ref;

;; $MarketTon$_fun_deleteDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_deleteDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, int $dealId, slice $originalGasTo) impure inline_ref;

;; $MarketTon$_fun__cancelDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun__cancelDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, (int, int, int, int, int, int, int, int, int, int, int, int, int, slice) $deal, slice $originalGasTo, int $queryId, int $dealId) impure inline_ref;

;; $MarketTon$_fun_cancelDealAfterRecievedDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_cancelDealAfterRecievedDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, (int, int, int, int, int, int, int, int, int, int, int, int, int, slice) $deal, cell $query, (int, slice, int, slice) $ctx, int $queryId, int $dealId) impure inline_ref;

;; $MarketTon$_fun_fetchOwnerByIndex
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_fetchOwnerByIndex((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $query_id, int $item_index, int $value) impure inline_ref;

;; $MarketTon$_fun_sendReward
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_sendReward((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $tokenId, int $amount, int $queryId, slice $originalGasTo) impure inline_ref;

;; $MarketTon$_fun_processDealAfterRecievedDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_processDealAfterRecievedDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, (int, int, int, int, int, int, int, int, int, int, int, int, int, slice) $deal, cell $query, (int, slice, int, slice) $ctx, int $queryId, int $dealId) impure inline_ref;

;; $MarketTon$_fun_onPriceReceived
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_onPriceReceived((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, int $feedId, int $price, int $timestamp, int $feedId2, int $price2, int $timestamp2) impure inline_ref;

;; $MarketTon$_fun_onOracleErrorReceived
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_onOracleErrorReceived((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId, slice $error) impure inline_ref;

;; $MarketTon$_fun_onBouncedGetOwner
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_onBouncedGetOwner((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $queryId) impure inline_ref;

;; $MarketTon$_fun_id
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_id((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_amm
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), slice) $MarketTon$_fun_amm((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_underlyingAssetName
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), slice) $MarketTon$_fun_underlyingAssetName((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_duration
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_duration((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_operatorFee
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_operatorFee((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_balance
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_balance((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_serviceFee
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_serviceFee((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_countDeal
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_countDeal((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_next_item_index
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_next_item_index((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_collection_content
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), cell) $MarketTon$_fun_collection_content((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_oracle
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), slice) $MarketTon$_fun_oracle((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_factory
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), slice) $MarketTon$_fun_factory((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_feedIdAsset
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_feedIdAsset((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_feedIdToken
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_feedIdToken((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_operatorFeeSum
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_operatorFeeSum((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_serviceFeeSum
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_serviceFeeSum((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_operatorFeeAddress
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), slice) $MarketTon$_fun_operatorFeeAddress((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_mapQueriesToContext
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), cell) $MarketTon$_fun_mapQueriesToContext((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_tonDepositBalance
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_tonDepositBalance((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_forward
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_forward((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $MarketTon$_fun_reply
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_reply((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, cell $body) impure inline;

;; $MarketTon$_fun_requireNotStopped
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_requireNotStopped((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_requireStopped
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_requireStopped((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_stopped
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), int) $MarketTon$_fun_stopped((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_requireOwner
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), ()) $MarketTon$_fun_requireOwner((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_owner
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), slice) $MarketTon$_fun_owner((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_get_collection_data
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), (int, cell, slice)) $MarketTon$_fun_get_collection_data((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self) impure inline_ref;

;; $MarketTon$_fun_get_nft_address_by_index
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), slice) $MarketTon$_fun_get_nft_address_by_index((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $item_index) impure inline_ref;

;; $MarketTon$_fun_get_nft_content
((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice), cell) $MarketTon$_fun_get_nft_content((int, slice, slice, slice, int, int, int, slice, int, int, int, cell, cell, slice, int, int, int, int, int, slice) $self, int $index, cell $individual_content) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;

;; $TakeDealData$_constructor_dealId_oracleAssetData_oracleTokenData
((int, cell, cell)) $TakeDealData$_constructor_dealId_oracleAssetData_oracleTokenData(int $dealId, cell $oracleAssetData, cell $oracleTokenData) inline;

;; $ContextCancelDealForDealReceived$_constructor_from
((slice)) $ContextCancelDealForDealReceived$_constructor_from(slice $from) inline;

;; $ContextProcessDealForPriceReceived$_constructor_from_dealId
((slice, int)) $ContextProcessDealForPriceReceived$_constructor_from_dealId(slice $from, int $dealId) inline;
