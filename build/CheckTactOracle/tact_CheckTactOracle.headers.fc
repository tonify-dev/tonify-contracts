;;
;; Header files for CheckTactOracle
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $SetPrice$_load
(slice, ((int, cell, cell))) $SetPrice$_load(slice sc_0) inline;

;; $CheckTactOracle$_store
builder $CheckTactOracle$_store(builder build_0, (int, slice, int, int, int, int) v) inline;

;; $CheckTactOracle$_load
(slice, ((int, slice, int, int, int, int))) $CheckTactOracle$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $CheckTactOracle$init$_load
(slice, ((int, slice))) $CheckTactOracle$init$_load(slice sc_0) inline;

;; $CheckTactOracle$_contract_init
(int, slice, int, int, int, int) $CheckTactOracle$_contract_init(int $id, slice $oracle) impure inline_ref;

;; $CheckTactOracle$_contract_load
(int, slice, int, int, int, int) $CheckTactOracle$_contract_load() impure inline_ref;

;; $CheckTactOracle$_contract_store
() $CheckTactOracle$_contract_store((int, slice, int, int, int, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $CheckTactOracle$_fun_onPriceReceived
((int, slice, int, int, int, int), ()) $CheckTactOracle$_fun_onPriceReceived((int, slice, int, int, int, int) $self, int $queryId, int $feedId, int $price, int $timestamp, int $feedId_2, int $price_2, int $timestamp_2) impure inline_ref;

;; $CheckTactOracle$_fun_onOracleErrorReceived
((int, slice, int, int, int, int), ()) $CheckTactOracle$_fun_onOracleErrorReceived((int, slice, int, int, int, int) $self, int $queryId, slice $msg) impure inline_ref;

;; $CheckTactOracle$_fun_feedId
((int, slice, int, int, int, int), int) $CheckTactOracle$_fun_feedId((int, slice, int, int, int, int) $self) impure inline_ref;

;; $CheckTactOracle$_fun_price
((int, slice, int, int, int, int), int) $CheckTactOracle$_fun_price((int, slice, int, int, int, int) $self) impure inline_ref;

;; $CheckTactOracle$_fun_queryId
((int, slice, int, int, int, int), int) $CheckTactOracle$_fun_queryId((int, slice, int, int, int, int) $self) impure inline_ref;

;; $CheckTactOracle$_fun_balance
((int, slice, int, int, int, int), int) $CheckTactOracle$_fun_balance((int, slice, int, int, int, int) $self) impure inline_ref;

;; $CheckTactOracle$_fun_timestamp
((int, slice, int, int, int, int), int) $CheckTactOracle$_fun_timestamp((int, slice, int, int, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $CheckTactOracle$_fun_forward
((int, slice, int, int, int, int), ()) $CheckTactOracle$_fun_forward((int, slice, int, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $CheckTactOracle$_fun_notify
((int, slice, int, int, int, int), ()) $CheckTactOracle$_fun_notify((int, slice, int, int, int, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice $to, int $value, int $mode, cell $body) inline;

;; $CheckTactOracle$_fun_fetchPrice
((int, slice, int, int, int, int), ()) $CheckTactOracle$_fun_fetchPrice((int, slice, int, int, int, int) $self, int $queryId, cell $firstOracleData, cell $secondOracleData) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
